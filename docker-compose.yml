version: '3.7'
services:
  myapp-app:
    build:
      args:
        user: sgadmin
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: myapp
    container_name: myapp-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - myapp

  myapp-db:
    image: mariadb
    container_name: myapp-db
    depends_on:
      - myapp-redis
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - myapp

  myapp-websockets:
    image: myapp
    command: ['php', 'artisan', 'websockets:serve']
    container_name: myapp-websockets
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    ports:
      - ${LARAVEL_WEBSOCKETS_PORT}:6001
    networks:
      - myapp

  myapp-nginx:
    image: nginx:alpine
    container_name: myapp-nginx
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
      - ${APP_PORT}:443
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx/dev:/etc/nginx/conf.d/
      - ./docker-compose/certbot/conf:/etc/letsencrypt
      - ./docker-compose/certbot/www:/var/www/certbot
    networks:
      - myapp

  myapp-certbot:
    image: certbot/certbot
    container_name: myapp-certbot
    volumes:
        - ./docker-compose/certbot/conf:/etc/letsencrypt
        - ./docker-compose/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
        - myapp

networks:
  myapp:
    driver: bridge